// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef gpsdwizard_h
#define gpsdwizard_h
#include <FL/Fl.H>
#include <sys/types.h>
#include <signal.h>
#include "obdconfig.h"
#include "obdgui.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Check_Button.H>

class GPSDWizardWindow {
public:
  GPSDWizardWindow();
private:
  Fl_Double_Window *window;
public:
  Fl_Group *devchooser_group;
private:
  Fl_Button *devchooser;
  void cb_devchooser_i(Fl_Button*, void*);
  static void cb_devchooser(Fl_Button*, void*);
public:
  Fl_Input_Choice *gpsd_devicename;
private:
  Fl_Check_Button *broken_device_safety;
  Fl_Button *launchbutton;
  void cb_launchbutton_i(Fl_Button*, void*);
  static void cb_launchbutton(Fl_Button*, void*);
  Fl_Button *killbutton;
  void cb_killbutton_i(Fl_Button*, void*);
  static void cb_killbutton(Fl_Button*, void*);
  Fl_Button *closebutton;
  void cb_closebutton_i(Fl_Button*, void*);
  static void cb_closebutton(Fl_Button*, void*);
  int launch_gpsd();
  void kill_gpsd();
public:
  void show();
  void hide();
  pid_t getGpsdPid();
  void gpsd_add_device(const char *devname);
  ~GPSDWizardWindow();
};
#endif
