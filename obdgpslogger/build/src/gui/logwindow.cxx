// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "/home/anthony/ClemsonVibrationResearch/obdgpslogger/build/src/gui/logwindow.h"
#include <stdio.h>

void OBDLogWindow::cb_clearbutton_i(Fl_Button*, void*) {
  clear_logs();
}
void OBDLogWindow::cb_clearbutton(Fl_Button* o, void* v) {
  ((OBDLogWindow*)(o->parent()->user_data()))->cb_clearbutton_i(o,v);
}

OBDLogWindow::OBDLogWindow() {
  { logwindow = new Fl_Double_Window(625, 500, "OBD GPS Logger Output");
    logwindow->user_data((void*)(this));
    { Fl_Text_Display* o = logdata_stdout = new Fl_Text_Display(25, 25, 285, 430, "stdout");
      o->buffer(new Fl_Text_Buffer);
    } // Fl_Text_Display* logdata_stdout
    { Fl_Text_Display* o = logdata_stderr = new Fl_Text_Display(320, 25, 290, 430, "stderr");
      o->buffer(new Fl_Text_Buffer);
    } // Fl_Text_Display* logdata_stderr
    { clearbutton = new Fl_Button(530, 460, 80, 25, "Clear");
      clearbutton->callback((Fl_Callback*)cb_clearbutton);
    } // Fl_Button* clearbutton
    { enablestdlog = new Fl_Check_Button(320, 460, 190, 25, "Gather stdout and stderr");
      enablestdlog->down_box(FL_DOWN_BOX);
    } // Fl_Check_Button* enablestdlog
    logwindow->end();
  } // Fl_Double_Window* logwindow
}

void OBDLogWindow::clear_logs() {
  Fl_Text_Buffer *b;
  b = logdata_stdout->buffer();
  if(NULL != b) b->text("");
  b = logdata_stderr->buffer();
  if(NULL != b) b->text("");
}

void OBDLogWindow::append_stderr(const char *text) {
  if(enablestdlog->value()) logdata_stderr->buffer()->append(text);
}

void OBDLogWindow::append_stdout(const char *text) {
  if(enablestdlog->value()) logdata_stdout->buffer()->append(text);
}

void OBDLogWindow::show() {
  logwindow->show();
}

void OBDLogWindow::hide() {
  logwindow->hide();
}
